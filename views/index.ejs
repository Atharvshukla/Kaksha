<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <link rel="icon" href="/favicon.png"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LiveTrace</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.css" integrity="sha512-h9FcoyWjHcOcmEVkxOfTLnmZFWIH0iZhZT1H2TbOq55xssQGEJHEaIm+PgoUaZbRvQTNTluNOEfb1ZRy6D3BOw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        /* Dark theme with interactive effects */
        body {
            background-color: #121212;
            color: #ffffff;
            font-family: Arial, sans-serif;
        }

        nav {
            background-color: #1f1f1f;
            padding: 1em;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 2px solid #4CAF50;
        }

        nav h1 {
            margin: 0;
            color: #4CAF50;
        }

        nav ul {
            list-style-type: none;
            margin: 0;
            padding: 0;
            display: flex;
            gap: 1em;
        }

        nav li {
            margin: 0;
        }

        nav a {
            color: #ffffff;
            text-decoration: none;
            font-size: 1.2em;
            padding: 0.5em 1em;
            border-radius: 5px;
            transition: background-color 0.3s, color 0.3s, transform 0.3s;
        }

        nav a:hover {
            background-color: #45a049; 
            transform: scale(1.05);
        }

        #menu-button {
            display: none;
            font-size: 1.5em;
            background: none;
            border: none;
            color: #4CAF50;
            cursor: pointer;
        }

        #nav-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.9);
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        #nav-overlay ul {
            display: flex;
            flex-direction: column;
            gap: 1em;
            text-align: center;
        }

        #map {
            height: 500px;
            width: 100%;
            border: 2px solid #4CAF50;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
            margin-top: 1em;
        }

        .form-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: none;
            justify-content: center;
            align-items: center;
            background-color: rgba(0, 0, 0, 0.7); 
            z-index: 1000; 
        }

        .form-container {
            background-color: #1f1f1f;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.5);
            width: 50%;
            max-width: 600px;
            text-align: center;
            color: #ffffff;
            position: relative;
        }

        .form-section {
            margin-bottom: 1em;
        }

        .form-close {
            position: absolute;
            top: 10px;
            right: 10px;
            cursor: pointer;
            font-size: 1.2em;
            color: #888;
            transition: color 0.3s;
        }

        .form-close:hover {
            color: #ffffff;
        }

        .form-container input, .form-container button {
            width: calc(100% - 22px);
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 5px;
            border: 1px solid #4CAF50;
            background-color: #2e2e2e;
            color: #ffffff;
            transition: background-color 0.3s, border 0.3s, transform 0.3s;
        }

        .form-container input:focus, .form-container button:hover {
            background-color: #3f3f3f;
            border: 1px solid #45a049;
            transform: scale(1.05);
        }

        .form-container button {
            cursor: pointer;
            background-color: #4CAF50;
            color: #ffffff;
        }

        #geofence-alert, #status {
            color: #4CAF50;
            margin: 1em 0;
            text-align: center;
        }
     
#username {
    width: 80%; /* Adjust width to fit well within different screen sizes */
    max-width: 400px; /* Maximum width to ensure it doesn't get too large on wide screens */
    padding: 12px 20px; /* Increase padding for better touch targets */
    margin: 20px auto; /* Center the input field with top margin */
    display: block; /* Ensure the input is centered by treating it as a block element */
    font-size: 1.2em; /* Increase font size for readability */
    color: #ffffff; /* White text color to stand out on dark background */
    background-color: #2e2e2e; /* Dark background for consistency with theme */
    border: 2px solid #4CAF50; /* Green border to match theme */
    border-radius: 5px; /* Smooth rounded corners */
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); /* Add a subtle shadow for depth */
    transition: background-color 0.3s, border-color 0.3s, box-shadow 0.3s, transform 0.3s; /* Smooth transitions */
}

#username:focus {
    background-color: #3f3f3f; /* Darker background when focused */
    border-color: #45a049; /* Lighter green border on focus */
    box-shadow: 0 0 15px rgba(0, 128, 0, 0.7); /* More prominent shadow on focus */
    transform: scale(1.02); /* Slight scale up on focus */
}

/* Responsive adjustments */
@media (max-width: 600px) {
    #username {
        width: 90%; /* Wider input on smaller screens */
        font-size: 1em; /* Slightly reduce font size for better fit */
    }
}


        @media (max-width: 600px) {
            nav ul {
                display: none;
            }

            #menu-button {
                display: block;
            }

            #nav-overlay {
                display: none;
                flex-direction: column;
            }

            #nav-overlay ul {
                gap: 1.5em;
            }
        }
    </style>
</head>
<body>
    <div id="welcome-banner">
        <div class="banner-content">
            <span class="banner-close" id="close-banner">&times;</span>
            <h2>Welcome to LiveTrace!</h2>
            <p>We're excited to have you here. Explore the site and discover our features.</p>
        </div>
    </div>
    <nav>
        <h1>LiveTrace</h1>
        <button id="menu-button">&#9776;</button>
        <ul>
            <li><a href="#" id="set-marker-link">Set Marker</a></li>
            <li><a href="#" id="set-geofence-link">Set Geofence</a></li>
            <li><a href="#" id="send-message-link">Chat</a></li>
            <li><a href="#" id="report-incident-link">Report Incident</a></li>
            <li><a href="#" id="view-incidents-link">View Incidents</a></li>
        </ul>
    </nav>

    <div id="nav-overlay">
        <ul>
            <li><a href="#" id="nav-close">&times;</a></li>
            <li><a href="#" id="set-marker-link-overlay">Set Marker</a></li>
            <li><a href="#" id="set-geofence-link-overlay">Set Geofence</a></li>
            <li><a href="#" id="send-message-link-overlay">Chat</a></li>
            <li><a href="#" id="report-incident-link-overlay">Report Incident</a></li>
            <li><a href="#" id="view-incidents-link-overlay">View Incidents</a></li>
            <li><a href="#" id="allocate-resources-link-overlay">Allocate Resources</a></li>
        </ul>
    </div>

    <!-- Marker form overlay -->
    <div class="form-overlay" id="markerFormOverlay">
        <div class="form-container">
            <span class="form-close" id="closeMarkerForm">&times;</span>
            <form id="markerForm" class="form-section">
                <input type="number" id="lat" placeholder="Latitude" step="any" required>
                <input type="number" id="lng" placeholder="Longitude" step="any" required>
                <button type="submit" id="set-marker">Set Marker</button>
            </form>
        </div>
    </div>

    <!-- Geofence form overlay -->
    <div class="form-overlay" id="geofenceFormOverlay">
        <div class="form-container">
            <span class="form-close" id="closeGeofenceForm">&times;</span>
            <form id="geofenceForm" class="form-section">
                <input type="number" id="geofence-lat" placeholder="Geofence Latitude" step="any" required>
                <input type="number" id="geofence-lng" placeholder="Geofence Longitude" step="any" required>
                <input type="number" id="geofence-radius" placeholder="Geofence Radius (meters)" step="any" required>
                <button type="submit" id="set-geofence">Set Geofence</button>
            </form>
        </div>
    </div>

    <!-- Message form overlay -->
    <div class="form-overlay" id="messageFormOverlay">
        <div class="form-container">
            <span class="form-close" id="closeMessageForm">&times;</span>
            <form id="messageForm" class="form-section">
                <input type="text" id="message" placeholder="Enter a message">
                <input type="text" id="message" placeholder="Enter a message">
                <button id="send-message">Send Message</button>
                <div id="messages"></div>
            </form>
        </div>
    </div>

    <!-- Incident form overlay -->
    <div class="form-overlay" id="incidentFormOverlay">
        <div class="form-container">
            <span class="form-close" id="closeIncidentForm">&times;</span>
            <form id="incidentForm" class="form-section">
                <input type="number" id="incident-lat" placeholder="Incident Latitude" step="any" required>
                <input type="number" id="incident-lng" placeholder="Incident Longitude" step="any" required>
                <input type="text" id="incident-description" placeholder="Incident Description" required>
                <button type="submit" id="report-incident">Report Incident</button>
            </form>
        </div>
    </div>

    <!-- Incident list overlay -->
    <div class="form-overlay" id="incidentListOverlay">
        <div class="form-container">
            <span class="form-close" id="closeIncidentList">&times;</span>
            <h2>Reported Incidents</h2>
            <div id="incident-list"></div>
            <div id="messages"></div>
        </div>
    </div>

    <!-- Resource allocation overlay -->
    <div class="form-overlay" id="resourceAllocationOverlay">
        <div class="form-container">
            <span class="form-close" id="closeResourceAllocation">&times;</span>
            <form id="resourceAllocationForm" class="form-section">
                <input type="text" id="resource-type" placeholder="Resource Type" required>
                <input type="number" id="resource-quantity" placeholder="Resource Quantity" required>
                <input type="number" id="resource-lat" placeholder="Latitude" step="any" required>
                <input type="number" id="resource-lng" placeholder="Longitude" step="any" required>
                <button type="submit">Allocate Resources</button>
            </form>
        </div>
    </div>

    <input type="text" id="username" placeholder="Enter your name">
    <div id="status"></div>
    <div id="map"></div>
    <div id="geofence-alert"></div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.js" integrity="sha512-puJW3E/qXDqYp9IfhAI54BJEaWIfloJ7JWs7OeD5i6ruC9JZL1gERT1wjtwXFlh7CjE7ZJ+/vcRZRkIYIb6p4g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdn.socket.io/4.7.5/socket.io.min.js" integrity="sha384-2huaZvOR9iDzHqslqwpR87isEmrfxqyWOF7hr7BY6KG0+hVKLoEXMPUJw3ynWuhO" crossorigin="anonymous"></script>
    <script src="/js/script.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const closeBannerButton = document.getElementById('close-banner');
            const welcomeBanner = document.getElementById('welcome-banner');
        closeBannerButton.addEventListener('click', function() {
        welcomeBanner.classList.add('hidden'); // Add the hidden class to slide the banner up
    });
            let marker, geofenceCircle;

            const menuButton = document.getElementById("menu-button");
    const navOverlay = document.getElementById("nav-overlay");
    const navClose = document.getElementById("nav-close");

    menuButton.addEventListener("click", function() {
        navOverlay.style.display = "flex";
    });

    navClose.addEventListener("click", function() {
        navOverlay.style.display = "none";
    });

    navOverlay.addEventListener("click", function(event) {
        if (event.target === navOverlay) {
            navOverlay.style.display = "none";
        }
    });

            // Show marker form
            document.getElementById('set-marker-link').addEventListener('click', () => {
                document.getElementById('markerFormOverlay').style.display = 'flex';
            });

            // Close marker form
            document.getElementById('closeMarkerForm').addEventListener('click', () => {
                document.getElementById('markerFormOverlay').style.display = 'none';
            });

            // Handle marker form submission
            document.getElementById('markerForm').addEventListener('submit', (e) => {
                e.preventDefault();
                const lat = parseFloat(document.getElementById('lat').value);
                const lng = parseFloat(document.getElementById('lng').value);
                if (marker) {
                    marker.setLatLng([lat, lng]);
                } else {
                    marker = L.marker([lat, lng]).addTo(map);
                }
                map.setView([lat, lng], 13);
                document.getElementById('markerFormOverlay').style.display = 'none';
            });

            // Show geofence form
            document.getElementById('set-geofence-link').addEventListener('click', () => {
                document.getElementById('geofenceFormOverlay').style.display = 'flex';
            });

            // Close geofence form
            document.getElementById('closeGeofenceForm').addEventListener('click', () => {
                document.getElementById('geofenceFormOverlay').style.display = 'none';
            });

            // Handle geofence form submission
            document.getElementById('geofenceForm').addEventListener('submit', (e) => {
                e.preventDefault();
                const lat = parseFloat(document.getElementById('geofence-lat').value);
                const lng = parseFloat(document.getElementById('geofence-lng').value);
                const radius = parseFloat(document.getElementById('geofence-radius').value);
                if (geofenceCircle) {
                    geofenceCircle.setLatLng([lat, lng]).setRadius(radius);
                } else {
                    geofenceCircle = L.circle([lat, lng], {
                        color: '#ff0000',
                        fillColor: '#ff0000',
                        fillOpacity: 0.2,
                        radius: radius
                    }).addTo(map);
                }
                document.getElementById('geofenceFormOverlay').style.display = 'none';
            });

            // Show message form
            document.getElementById('send-message-link').addEventListener('click', () => {
                document.getElementById('messageFormOverlay').style.display = 'flex';
            });

            // Close message form
            document.getElementById('closeMessageForm').addEventListener('click', () => {
                document.getElementById('messageFormOverlay').style.display = 'none';
            });

            // Handle message form submission
            document.getElementById('messageForm').addEventListener('submit', (e) => {
                e.preventDefault();
                const message = document.getElementById('message').value;
                socket.emit('send-message', { text: message });
                document.getElementById('message').value = '';
            });

            // Receive and display messages
            socket.on('receive-message', (data) => {
                const messageDiv = document.createElement('div');
                messageDiv.textContent = data.text;
                document.getElementById('messages').appendChild(messageDiv);
            });

            // Show incident form
            document.getElementById('report-incident-link').addEventListener('click', () => {
                document.getElementById('incidentFormOverlay').style.display = 'flex';
            });

            // Close incident form
            document.getElementById('closeIncidentForm').addEventListener('click', () => {
                document.getElementById('incidentFormOverlay').style.display = 'none';
            });

            // Handle incident form submission
            document.getElementById('incidentForm').addEventListener('submit', (e) => {
                e.preventDefault();
                const description = document.getElementById('incident-description').value;
                const lat = parseFloat(document.getElementById('incident-lat').value);
                const lng = parseFloat(document.getElementById('incident-lng').value);
                socket.emit('reportIncident', { description, lat, lng });
                document.getElementById('incident-description').value = '';
                document.getElementById('incident-lat').value = '';
                document.getElementById('incident-lng').value = '';
                document.getElementById('incidentFormOverlay').style.display = 'none';
            });

            // Show incidents list
            document.getElementById('view-incidents-link').addEventListener('click', () => {
                document.getElementById('incidentListOverlay').style.display = 'flex';
                socket.emit('getReportedIncidents');
            });

            // Close incidents list
            document.getElementById('closeIncidentList').addEventListener('click', () => {
                document.getElementById('incidentListOverlay').style.display = 'none';
            });

            // Display reported incidents
            socket.on('reportedIncidents', function (incidents) {
                const incidentList = document.getElementById('incident-list');
                incidentList.innerHTML = ''; // Clear existing list
                incidents.forEach(function (incident) {
                    const listItem = document.createElement('div');
                    listItem.textContent = `Location: (${incident.lat}, ${incident.lng}), Description: ${incident.description}`;
                    incidentList.appendChild(listItem);
                });
            });

            // Display received location
            socket.on('receive-location', function (data) {
                if (marker) {
                    marker.setLatLng([data.lat, data.lng]);
                } else {
                    marker = L.marker([data.lat, data.lng]).addTo(map);
                }
                map.setView([data.lat, data.lng], 13);
            });

            // Handle geofence alert
            socket.on('geofence-alert', function (message) {
                document.getElementById('geofence-alert').textContent = message;
            });

            // Handle status update
            socket.on('update-status', function (status) {
                document.getElementById('status').textContent = status;
            });
        });
        
    </script>
</body>
</html>
